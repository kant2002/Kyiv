@page "/disassembler"
@using Система.ВВ
@using System.Linq
@inject HttpClient httpClient

<НазваСторінки>Дізасемблер</НазваСторінки>

<h1>Дізасемблер</h1>

<div class="row">
    <div class="col">
        <p>Введіть набір команд</p>
        <InputTextArea @bind-Value="Команда" rows="20" cols="26" style="font-family: monospace;" />
        <h4>Приклад</h4>
        <pre><code>3100 01 0000 0000 0003
   1 26 0012 0000 0000
   2 11 0002 3050 0002
   3 10 3047 0002 0004
   4 12 0003 3045 0003
   5 01 0004 0003 0003
   6 12 0004 3047 0004
   7 02 0002 0004 0002
</code></pre>
    </div>
    <div class="col">
        <p>Лістінг у псевдо-асемблері</p>
<div style="white-space: pre">
@((MarkupString)ДізасембльованаКоманда)
</div>
    </div>
    <div class="col">
        <label>
            Вбудована підпрограма із незмінної пам'яти
        </label>
        <InputSelect @bind-Value="Варіант">
            <option value="">
                Ручні адреси ...
            </option>
            <option checked="@(Варіант == "2to10")"
                    value="2to10">
                перевод из двоичной системы счисления в десятичную
            </option>
            <option checked="@(Варіант == "lnx")"
                    value="lnx">
                ln(x)
            </option>
            <option checked="@(Варіант == "cosX_v1")"
                    value="cosX_v1">
                1/2 * cosX (-1 &lt;x &lt; 1)
            </option>
            <option checked="@(Варіант == "sinX_v1")"
                    value="sinX_v1">
                1/2 * sinX (-1 &lt;x &lt; 1)
            </option>
            <option checked="@(Варіант == "sqrt")"
                    value="sqrt">
                sqrt(x)
            </option>
            @* <option checked="@(Варіант == "ex")"
                    value="ex">
                e(x)
            </option> *@
            <option checked="@(Варіант == "ex_2")"
                    value="ex_2">
                1/4 * e(x)
            </option>
            <option checked="@(Варіант == "cosX_v2")"
                    value="cosX_v2">
                1/2 * cosX (—2π &lt;x &lt; 2π)
            </option>
            <option checked="@(Варіант == "sinX_v2")"
                    value="sinX_v2">
                1/2 * sinX (-2π &lt;x &lt; 2π)
            </option>
            <option checked="@(Варіант == "arccosX_v1")"
                    value="arccosX_v1">
                1/π * arccos(X) (-1 &lt;x &lt; 1)
            </option>
            <option checked="@(Варіант == "arcsinX_v1")"
                    value="arcsinX_v1">
                1/π * arcsin(X) (-1 &lt;x &lt; 1)
            </option>

        </InputSelect>
        <label>
            Відомі підпрограми із книги
        </label>
        @{
            string[] підпрограми = [
                "алгоритм метода сопряженных градиентов",
                "КомутаторКоманд",
                "Подпрограмма ввода чисел",
                "Подпрограмма операций типа сложения",
                "Подпрограмма операций типа умножения",
                "Подпрограмма печати",
                "Специальные константы",
                "ТестАрифметическогоУстройства",
                "ТестМагнитногоБарабана",
                "ТестОЗУ",
                "ТестУстройстваУправления",
                "усовершенствованній метод Гаусса - обратный ход",
                "усовершенствованній метод Гаусса",
            ];
        }
        <InputSelect @bind-Value="ВаріантПідпрограм">
            <option value="">
                Виберіть підпрограму ...
            </option>
            @foreach (var значення in підпрограми)
            {
                <option checked="@(ВаріантПідпрограм == значення)"
                        value="@значення">
                    @значення
                </option>
            }
        </InputSelect>
        <label>
            Початкова адреса <small>(8-річне число)</small>
            <InputNumber @bind-Value="ПочатковаАдреса" size="4" />
        </label>
        <label>
            Кількість слів
            <InputNumber @bind-Value="КількістьСлів" size="4" />
        </label>

        <button type="button" title="Завантажити програму із ПЗП" class="btn btn-primary" @onclick=Завантажити>Завантажити</button>
        <p>Виберіть із одного із випадаючих списків підпрограму для дізасемблінгу.</p>
    </div>
</div>

@code {

    public string Команда { get; set; } = "";
    private string варіант = "";
    public string Варіант
    {
        get => варіант;
        set
        {
            варіант = value;
            if (value == "2to10")
            {
                ПочатковаАдреса = 3100;
                КількістьСлів = 10;
            }
            if (value == "lnx")
            {
                ПочатковаАдреса = 3112;
                КількістьСлів = 29;
            }
            if (value == "cosX_v1")
            {
                ПочатковаАдреса = 3147;
                КількістьСлів = 12;
            }
            if (value == "sinX_v1")
            {
                ПочатковаАдреса = 3152;
                КількістьСлів = 9;
            }
            if (value == "sqrt")
            {
                ПочатковаАдреса = 3163;
                КількістьСлів = 7; /* 6 у книзі */
            }
            // if (value == "ex")
            // {
            //     ПочатковаАдреса = 3202;
            //     КількістьСлів = 13;
            // }
            if (value == "ex_2")
            {
                ПочатковаАдреса = 3202;
                КількістьСлів = 13;
                //ПочатковаАдреса = 3172;
                //КількістьСлів = 21 /* 19 у книзі */;
            }
            if (value == "cosX_v2")
            {
                ПочатковаАдреса = 3217;
                КількістьСлів = 16 /* 19 у книзі */;
            }
            if (value == "sinX_v2")
            {
                ПочатковаАдреса = 3264;
                КількістьСлів = 12 /* 20 у книзі */;
            }
            if (value == "arccosX_v1")
            {
                ПочатковаАдреса = 3244;
                КількістьСлів = 15 /* 16 у книзі */;
            }
            if (value == "arcsinX_v1")
            {
                ПочатковаАдреса = 3242;
                КількістьСлів = 17;
            }

            if (value != "")
            {
                Завантажити();
            }
        }
    }
    private string варіантПідпрограм = "";
    public string ВаріантПідпрограм
    {
        get => варіантПідпрограм;
        set
        {
            варіантПідпрограм = value;
            if (value != "")
            {
                _ = ЗавантажитиПідпрограму(варіантПідпрограм);
            }
        }
    }
    public int ПочатковаАдреса { get; set; } = 3100;
    public int КількістьСлів { get; set; } = 10;

    public string ДізасембльованаКоманда
    {
        get => ПочатковаАдреса + ":" + Environment.NewLine + global::Kyiv.Дізасемблер.Дізасемблювати(Команда);
    }

    public void Завантажити()
    {
        МашинаКиїв машина = new();
        List<string> лінії = new();
        var початковаАдреса = Конвертер.Із8РічноїАдреси(ПочатковаАдреса);
        for (var i = 0; i < КількістьСлів;i++)
        {
            var адреса = початковаАдреса + i;
            var команда = машина.ПрочитатиПамять(адреса);
            var текстКоманди = ПарсерКоманд.Сконвертувати(команда);
            if (i == 0 || (адреса & 7) == 0)
            {
                лінії.Add($"{Конвертер.До8РічноїАдреси(адреса),4} {текстКоманди}");
            }
            else
            {
                лінії.Add($"   {(адреса & 7)} {текстКоманди}");
            }
        }

        Команда = string.Join(Environment.NewLine, лінії);
    }

    public async Task ЗавантажитиПідпрограму(string назва)
    {
        var файл = $"Підпрограми/{назва}.txt";
        var лініїФайлу = (await httpClient.GetStringAsync(файл)).ReplaceLineEndings().Split(Environment.NewLine);
        var лістінг = ПарсерЛістінга.ПрочитатиІзЛіній(лініїФайлу);
        var одиницяКоду = лістінг.ОдиниціКоду[0];
        ПочатковаАдреса = одиницяКоду.ПочатковаАдреса;
        List<string> лінії = new();
        for (var i = 0; i < одиницяКоду.Команди.Count; i++)
        {
            var адреса = ПочатковаАдреса + i;
            var команда = одиницяКоду.Команди[i];
            var текстКоманди = ПарсерКоманд.Сконвертувати(команда);
            if (i == 0 || (адреса & 7) == 0)
            {
                лінії.Add($"{Конвертер.До8РічноїАдреси(адреса),4} {текстКоманди}");
            }
            else
            {
                лінії.Add($"   {(адреса & 7)} {текстКоманди}");
            }
        }

        Команда = string.Join(Environment.NewLine, лінії);
        StateHasChanged();
    }
}
